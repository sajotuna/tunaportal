class = table-active

 $('#delBtn').on('click',function(){
		var header = $("meta[name='_csrf_header']").attr('content');
		var token = $("meta[name='_csrf']").attr('content');
		var no = $("#nockeck").data('no');
		let pnno = $("#pnnocheck").data('pnno');
	 
		console.log(no)
		console.log(pnno)
	 if($('#check').hasClass("table-active"===true)){
		 $.ajax({
			 url:getContextPath()+'/admin/adminNoticeDelete',
			 method:'DELETE',
			 data:JSON.stringfy({no, pnno}),
			 contentType : 'application/json; charset=utf-8',
			 beforeSend : function(xhr) {
					xhr.setRequestHeader(header, token);
				},
				success:function(){
					
				}
			 
		 })
	 }
 })




function delCheck(){
	 $('#delBtn').on('click',function(){		 
		 let job =$(this).data('job');

		 class pageDialogs{
				static dialog(job, txt){
					let toast = Swal.mixin({
					      buttonsStyling: false,
					      target: '#page-container',
					      customClass: {
					        confirmButton: 'btn btn-dark m-1',
					        cancelButton: 'btn btn-danger m-1',
					        input: 'form-control'
					      }
					    });
					
					success();
					
					function success(e){	
						 if( job === 'delete') {							 
							 toast.fire({
							 title : '해당공지를 삭제하시겠습니까?',
							 text: '이 작업은 취소 할 수 없습니다.',
							 icon: 'warning',
							 showCancelButton: true,
							 customClass:{
								 confirmButton: 'btn btn-danger m-1',
								 cancelButton: 'btn btn-light m-1' 
							 },
							 confirmButtonText:'삭제하기',
							 cancelButtonText:'취소',
							 preConfirm: e => {
								 return new Promise(resolve => {
									 setTimeout(() => {
										 resolve();
									 }, 50);
								 });
							 }
							 	 
							 }).then(result => {
								 if(result.value){
								 let tr = $('#check').hasClass("table-active"===true).parent('tr')
								 let pnno = $("#pnnocheck").data('pnno');
								 $.ajax({
									 
									 url:getContextPath()+'/admin/adminNoticeDelete',
									 method:'DELETE',
									 data:JSON.stringfy({no:tr.date('no'), pnno:pnno}),
									 contentType : 'application/json; charset=utf-8',
									 beforeSend : function(xhr) {
											xhr.setRequestHeader(header, token);
										}
									 
								 }).done(function(success){
									 if(success){
										pageDialogs.dialog('success');
									 }
								 }) //done end
									 
								 }
								 
							 });//then end
							 
						 }//function success end
						 
					}
				}//static dialog end 
			 
			 }//class end
		 
	 })//onclick end
}// modal end


 
 

 
 function getContextPath() {
				var pathName = window.location.pathname.substring(1);
				var webName = pathName == '' ? '' : pathName.substring(0,
						pathName.indexOf('/'));
				var path_root = window.location.protocol + '//'
						+ window.location.host + '/' + webName + '/';
				return path_root;
			}
