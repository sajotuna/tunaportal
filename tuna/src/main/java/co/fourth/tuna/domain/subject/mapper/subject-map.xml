<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.fourth.tuna.domain.subject.mapper.SubjectMapper">
	

	<resultMap id="subjectMap" type="co.fourth.tuna.domain.subject.vo.SubjectVO">
		<association property="professorVO" column="{no=pfno}" javaType="co.fourth.tuna.domain.user.vo.ProfessorVO" 
			select="co.fourth.tuna.domain.user.mapper.ProfessorMapper.findById" />
	</resultMap>

	<resultMap id="SbjByStudTaskMap" type="co.fourth.tuna.domain.subject.vo.SubjectVO">
	<collection property="taskList"
		ofType="co.fourth.tuna.domain.task.vo.TaskVO"
		javaType="java.util.ArrayList"
		column="no"
		select="co.fourth.tuna.domain.task.mapper.TaskMapper.taskList"
	></collection>
	
	</resultMap>


	<resultMap id="subjectListDataMap" 
		type="co.fourth.tuna.domain.subject.vo.SubjectVO">
		<id property="no" column="no"/>
		<association property="professorVO" column="professorVO" javaType="co.fourth.tuna.domain.user.vo.ProfessorVO" 
			select="co.fourth.tuna.domain.user.mapper.ProfessorMapper.findById" />

		
		<collection
			property="lectureApplyList"
			ofType="co.fourth.tuna.domain.lectureApply.vo.LectureApplyVO"
			javaType="java.util.ArrayList"
			column="no"
			select="co.fourth.tuna.domain.lectureApply.mapper.LectureApplyMapper.findBySubject"
		></collection>
		
		<collection
			property="lectureQnaList"
			ofType="co.fourth.tuna.domain.lectureQna.vo.LectureQnaVO"
			javaType="java.util.ArrayList"
			column="no"
			select="co.fourth.tuna.domain.lectureQna.mapper.LectureQnaMapper.findBySubjectId"
		></collection>
		
		<collection
			property="objectionList"
			ofType="co.fourth.tuna.domain.objection.vo.ObjectionVO"
			javaType="java.util.ArrayList"
			column="no"
			select="co.fourth.tuna.domain.objection.mapper.ObjectionMapper.findListBySubjectId">
		</collection>
		
		<collection
			property="lectureScheduleList"
			ofType="co.fourth.tuna.domain.common.vo.subject.LectureScheduleVO"
			javaType="java.util.ArrayList"
			column="no"
			select="co.fourth.tuna.domain.common.mapper.LectureScheduleMapper.findLectureScheduleForSubjectId"
		>
		</collection>
		
		<!-- <collection 
			property="attendanceList" 
			ofType="co.fourth.tuna.domain.attendance.vo.AttendanceVO"
			javaType="java.util.ArrayList"
			column="no"
			select="co.fourth.tuna.domain.attendance.mapper.AttendanceMapper.selectAttendancesForSubject"
			>
		</collection> -->
	</resultMap>
	
	<resultMap id="subjectWithFilesMap"
		type="co.fourth.tuna.domain.subject.vo.SubjectVO">
		<association
			property="gradeRatioVO"	column="no"
			select="co.fourth.tuna.domain.subject.mapper.GradeRatioMapper.findOneById"
			/>
		<collection property="lectureFileList" column="no"
			select="co.fourth.tuna.domain.lectureFile.mapper.LectureFileMapper.findListBySbjno"
		/>
		<collection property="lectureApplyList" column="no"
			select="co.fourth.tuna.domain.lectureApply.mapper.LectureApplyMapper.findBySubject"
		/>
		<collection property="lectureQnaList" column="no" 
			select="co.fourth.tuna.domain.lectureQna.mapper.LectureQnaMapper.findBySubjectId"
		/>
		
	</resultMap>

	<select id="findOne"
		resultType="co.fourth.tuna.domain.subject.vo.SubjectVO"
		>
		SELECT * 
		FROM subject
		WHERE no = #{no}
		ORDER BY no
	</select>
	<select id="findOneById"
		resultType="co.fourth.tuna.domain.subject.vo.SubjectVO"
		>
		SELECT * 
		FROM subject
		WHERE no = #{no}
		ORDER BY no
	</select>
	<select id="findOneWithApplysAndRatioAndFilesById"
		resultMap="subjectWithFilesMap"
	>
		SELECT *
		FROM subject
		WHERE no = #{no}
		ORDER BY no
	</select>
	
	<select id="findListByProfessorVO"
		resultType="co.fourth.tuna.domain.subject.vo.SubjectVO">
		SELECT *
		FROM subject
		WHERE pfno = #{prof.no}
			AND seasoncode = #{seasonCode}	
	</select>
	<select id="findListForProfessorMain"
		resultMap="subjectListDataMap">
		SELECT *
		FROM (
			SELECT
				ROWNUM rn, 
				subject.* 
			FROM subject
			WHERE pfno = #{prof.no}
				AND seasoncode = #{seasonCode}
			ORDER BY no ASC
		) WHERE rn
				BETWEEN (#{pageNum}-1)*#{size}
   			AND #{pageNum}*#{size}
		
	</select>
	
	<select id = "SubjectCheck" resultType="map">

		SELECT S.DEPTCODE, P.CODENAME 
		FROM SUBJECT S , PUBLICCODE P
		WHERE S.DEPTCODE = P.NO
		GROUP BY S.DEPTCODE, P.CODENAME

	</select>
	
	<!-- 강의 조회 (과목명, 교수명, 검색어) -->
	<select id="searchSubjectList"
		resultMap="subjectMap">
		
		<if test="searchKey.equals('lecture')">
			SELECT S.NO,
		           PD.CODENAME AS DEPTCODE, 
		           PT.CODENAME AS TYPE, 
		           S.NAME,
		           S.PFNO,
		           S.TARGET,
		           S.POINT
			FROM SUBJECT S, PUBLICCODE PT, PUBLICCODE PD
			WHERE PT.NO = S.TYPE
			AND PD.NO = S.DEPTCODE
			AND S.SEASONCODE = #{seasonCode}
			AND S.NAME LIKE '%'||#{key}||'%' 
			ORDER BY S.NO
		</if>
		
		<if test="searchKey.equals('professor')">
			SELECT S.NO,
			       PD.CODENAME AS DEPTCODE, 
			       PT.CODENAME AS TYPE, 
			       S.NAME,
			       S.PFNO,
			       S.TARGET,
			       S.POINT
			FROM SUBJECT S, PUBLICCODE PT, PUBLICCODE PD
			WHERE PT.NO = S.TYPE
			AND PD.NO = S.DEPTCODE
			AND S.PFNO IN ( SELECT NO
			                FROM PROFESSOR
			                WHERE NAME LIKE '%'||#{key}||'%' )
			AND S.SEASONCODE = #{seasonCode}
			ORDER BY S.NO ASC
		</if>
		
	</select>
	<!-- 수강중인 과목 전체 과제 조회 -->
	<select id="findSbjByStud" resultMap="SbjByStudTaskMap">
	SELECT *
	FROM SUBJECT S JOIN LECTUREAPPLY L
	ON(S.NO = L.SBJNO)
	WHERE L.STNO = #{stud.no}
	AND S.SEASONCODE = #{seasonCode}
	</select>
	
	<!-- 수강중인 단일 과목 과제 조회 -->
	<select id="selectOneSubTask" resultMap="SbjByStudTaskMap">
	SELECT *
	FROM SUBJECT S JOIN LECTUREAPPLY L
	ON(S.NO = L.SBJNO)
	WHERE L.STNO = #{stud.no}
	AND S.NO = #{sbj.no}
	</select>
	

	<select id="selectListByStudentIdAndPrfessorId"
		resultType="co.fourth.tuna.domain.subject.vo.SubjectWithAttendanceVO">
		SELECT
			s.NO          ,
			s.NAME        ,
			s.TARGET      ,
			s.TYPE        ,
			s.POINT       ,
			s.LIMIT       ,
			s.DEPTCODE    ,
			s.SEASONCODE  ,
			s.PFNO        ,
			s."GROUP"       ,
			s.SBJGROUP
		FROM
			subject s
		JOIN lectureapply l
			on (s.no = l.sbjno)
		WHERE l.stno = ${stno}
			AND s.pfno = ${pfno}
			AND s.seasoncode = ${season}
	</select>

	<select id = "subjectCount" resultType = "int" parameterType="String">
	
	SELECT COUNT(*) FROM SUBJECT WHERE SEASONCODE = #{seasonCode}
	
	</select>
	

</mapper>